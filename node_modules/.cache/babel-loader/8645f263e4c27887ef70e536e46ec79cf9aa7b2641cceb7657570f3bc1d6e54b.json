{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denso\\\\Desktop\\\\react\\\\finals\\\\main\\\\src\\\\addCateg.js\",\n  _s = $RefreshSig$();\nimport Container from 'react-bootstrap/Container';\nimport { useState } from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChildComponent({\n  showP,\n  onSendArrayToApp\n}) {\n  _s();\n  const [catToEdit, setCatToEdit] = useState('');\n  const [catName, setCatName] = useState('');\n  const [arrayToSend, setArrayToSend] = useState([]);\n  const [id, setId] = useState(0);\n  function SaveCateg() {\n    setId(prevId => prevId + 1);\n    setArrayToSend([...arrayToSend, [id, catName]]);\n    setCatName('');\n  }\n  function SaveEdit(id) {\n    const updatedCateg = arrayToSend.map((item, index) => {\n      if (index === id) {\n        return [item[0], catName];\n      }\n      return item;\n    });\n    setArrayToSend(updatedCateg);\n    setCatToEdit('');\n    setCatName('');\n  }\n  function Del(id) {\n    const updatedArray = arrayToSend.filter((item, index) => index !== id);\n    setArrayToSend(updatedArray);\n  }\n  function handleEdit(index) {\n    setCatToEdit(index);\n    setCatName(arrayToSend[index][1]);\n  }\n  function handleInputChange(e) {\n    setCatName(e.target.value);\n  }\n\n  // Function from parameter\n  useEffect(() => {\n    onSendArrayToApp(arrayToSend);\n  }, [arrayToSend, onSendArrayToApp]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      display: showP ? 'block' : 'none'\n    },\n    children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: catName,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SaveCateg,\n      children: \"Send Array to Parent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true,\n      striped: \"columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: arrayToSend.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: catToEdit === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n              value: catName,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this) : item[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: catToEdit === index ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => SaveEdit(index),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(index),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => Del(index),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n// export default function ChildComponent({ showP, onSendArrayToApp }) {\n//     const [catToEdit, setCatToEdit] = useState();\n//     const [catName, setCatName] = useState('')\n//     const [arrayToSend, setArrayToSend] = useState([]); // Array to be sent to the App\n//     const [id, setId] = useState(0)\n\n//     function SaveCateg() {\n//         setId(prevId => prevId + 1)\n//         setArrayToSend([...arrayToSend, [id, catName]])\n//         setCatName('')\n//     };\n\n//     function SaveEdit(id){\n//         const updatedCateg = arrayToSend.map((item,index) => {\n//             if (index === id) {\n//               return [item[0], catName]\n//             }\n//         return item\n//         });\n\n//         setArrayToSend(updatedCateg)\n//         setCatName('')\n\n//     }\n\n//     // function from parameter\n//     onSendArrayToApp(arrayToSend);\n\n//     function Del(id){\n\n//     }\n//     return (\n//         <Container style={{ display: showP ? \"block\" : \"none\" }}>\n//             Name: \n//                 <input \n//                     value={catName}\n//                     onChange={e => \n//                     setCatName(e.target.value)\n\n//                 }\n\n//                 /><br/>\n//                 <button onClick={SaveCateg}>Send Array to Parent</button>\n//                 <Table responsive striped=\"columns\">\n//                     <thead >\n//                         <tr>\n//                             <th>ID</th>\n//                             <th>Name</th>\n//                             <th>Action</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {\n//                         arrayToSend.map((item, index) => (\n//                         catToEdit === index ? \n//                             <tr>\n//                                 <td>{item[0]}</td>\n//                                 <td>\n//                                     <input \n//                                         value={catName}\n//                                         onChange={e => \n//                                             setCatName(e.target.value)\n//                                         }             \n//                                     />\n//                                 </td>\n//                                 <td><button onClick={SaveEdit(index)}>Save</button></td>\n//                             </tr>\n//                         :\n//                         <tr>\n//                         <td>{item[0]}</td>\n//                         <td>{item[1]}</td>\n//                         <td ><button onClick={() => setCatToEdit(index)}>Edit </button><br/>\n//                         <button onClick={() => Del(index)}>\n//                             Delete Product ID = {index}\n//                         </button></td>\n//                         </tr>\n//                         ))}\n//                     </tbody>\n//                 </Table>\n//         </Container>\n//     );\n//   }\n_s(ChildComponent, \"BD1xEYOrNWJg6fkW2l8wF/G1JoI=\");\n_c = ChildComponent;\nvar _c;\n$RefreshReg$(_c, \"ChildComponent\");","map":{"version":3,"names":["Container","useState","Table","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChildComponent","showP","onSendArrayToApp","_s","catToEdit","setCatToEdit","catName","setCatName","arrayToSend","setArrayToSend","id","setId","SaveCateg","prevId","SaveEdit","updatedCateg","map","item","index","Del","updatedArray","filter","handleEdit","handleInputChange","e","target","value","style","display","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","responsive","striped","_c","$RefreshReg$"],"sources":["C:/Users/denso/Desktop/react/finals/main/src/addCateg.js"],"sourcesContent":["import Container from 'react-bootstrap/Container';\r\nimport { useState } from \"react\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ChildComponent({ showP, onSendArrayToApp }) {\r\n    const [catToEdit, setCatToEdit] = useState('');\r\n    const [catName, setCatName] = useState('');\r\n    const [arrayToSend, setArrayToSend] = useState([]);\r\n    const [id, setId] = useState(0);\r\n  \r\n    function SaveCateg() {\r\n      setId(prevId => prevId + 1);\r\n      setArrayToSend([...arrayToSend, [id, catName]]);\r\n      setCatName('');\r\n    }\r\n  \r\n    function SaveEdit(id) {\r\n      const updatedCateg = arrayToSend.map((item, index) => {\r\n        if (index === id) {\r\n          return [item[0], catName];\r\n        }\r\n        return item;\r\n      });\r\n  \r\n      setArrayToSend(updatedCateg);\r\n      setCatToEdit('');\r\n      setCatName('');\r\n    }\r\n  \r\n    function Del(id) {\r\n      const updatedArray = arrayToSend.filter((item , index) => index !== id);\r\n      setArrayToSend(updatedArray);\r\n    }\r\n  \r\n    function handleEdit(index) {\r\n      setCatToEdit(index);\r\n      setCatName(arrayToSend[index][1]);\r\n    }\r\n  \r\n    function handleInputChange(e) {\r\n      setCatName(e.target.value);\r\n    }\r\n  \r\n    // Function from parameter\r\n    useEffect(() => {\r\n      onSendArrayToApp(arrayToSend);\r\n    }, [arrayToSend, onSendArrayToApp]);\r\n  \r\n    return (\r\n      <Container style={{ display: showP ? 'block' : 'none' }}>\r\n        Name: \r\n        <input \r\n          value={catName}\r\n          onChange={handleInputChange}\r\n        /><br/>\r\n        <button onClick={SaveCateg}>Send Array to Parent</button>\r\n        <Table responsive striped=\"columns\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {arrayToSend.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item[0]}</td>\r\n                <td>\r\n                  {catToEdit === index ? (\r\n                    <input \r\n                      value={catName}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  ) : (\r\n                    item[1]\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {catToEdit === index ? (\r\n                    <button onClick={() => SaveEdit(index)}>Save</button>\r\n                  ) : (\r\n                    <>\r\n                      <button onClick={() => handleEdit(index)}>Edit</button>\r\n                      <button onClick={() => Del(index)}>Delete</button>\r\n                    </>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    );\r\n  }\r\n// export default function ChildComponent({ showP, onSendArrayToApp }) {\r\n//     const [catToEdit, setCatToEdit] = useState();\r\n//     const [catName, setCatName] = useState('')\r\n//     const [arrayToSend, setArrayToSend] = useState([]); // Array to be sent to the App\r\n//     const [id, setId] = useState(0)\r\n\r\n//     function SaveCateg() {\r\n//         setId(prevId => prevId + 1)\r\n//         setArrayToSend([...arrayToSend, [id, catName]])\r\n//         setCatName('')\r\n//     };\r\n\r\n//     function SaveEdit(id){\r\n//         const updatedCateg = arrayToSend.map((item,index) => {\r\n//             if (index === id) {\r\n//               return [item[0], catName]\r\n//             }\r\n//         return item\r\n//         });\r\n        \r\n//         setArrayToSend(updatedCateg)\r\n//         setCatName('')\r\n\r\n//     }\r\n\r\n    \r\n//     // function from parameter\r\n//     onSendArrayToApp(arrayToSend);\r\n\r\n//     function Del(id){\r\n\r\n//     }\r\n//     return (\r\n//         <Container style={{ display: showP ? \"block\" : \"none\" }}>\r\n//             Name: \r\n//                 <input \r\n//                     value={catName}\r\n//                     onChange={e => \r\n//                     setCatName(e.target.value)\r\n                        \r\n//                 }\r\n                        \r\n//                 /><br/>\r\n//                 <button onClick={SaveCateg}>Send Array to Parent</button>\r\n//                 <Table responsive striped=\"columns\">\r\n//                     <thead >\r\n//                         <tr>\r\n//                             <th>ID</th>\r\n//                             <th>Name</th>\r\n//                             <th>Action</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {\r\n//                         arrayToSend.map((item, index) => (\r\n//                         catToEdit === index ? \r\n//                             <tr>\r\n//                                 <td>{item[0]}</td>\r\n//                                 <td>\r\n//                                     <input \r\n//                                         value={catName}\r\n//                                         onChange={e => \r\n//                                             setCatName(e.target.value)\r\n//                                         }             \r\n//                                     />\r\n//                                 </td>\r\n//                                 <td><button onClick={SaveEdit(index)}>Save</button></td>\r\n//                             </tr>\r\n//                         :\r\n//                         <tr>\r\n//                         <td>{item[0]}</td>\r\n//                         <td>{item[1]}</td>\r\n//                         <td ><button onClick={() => setCatToEdit(index)}>Edit </button><br/>\r\n//                         <button onClick={() => Del(index)}>\r\n//                             Delete Product ID = {index}\r\n//                         </button></td>\r\n//                         </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                 </Table>\r\n//         </Container>\r\n//     );\r\n//   }\r\n"],"mappings":"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AA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA/B,EAAA,CA7KwBH,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}