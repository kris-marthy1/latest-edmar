{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denso\\\\Desktop\\\\react\\\\event-finals-main\\\\event-finals-main\\\\src\\\\report.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/esm/Table';\nimport { MDBDataTable } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Report({\n  prodList,\n  categList,\n  report\n}) {\n  _s();\n  const [data, setData] = useState({\n    columns: [{\n      label: 'Customer Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Item Name',\n      field: 'item',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Quantity Ordered',\n      field: 'quantity',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Total Price',\n      field: 'total',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: []\n  });\n  const [prodTotalPriceMap, setProdTotalPriceMap] = useState({});\n  useEffect(() => {\n    const updatedRows = report.map(reportItem => {\n      var _categList$find;\n      const matchingProd = prodList.find(prod => prod.prodID === reportItem.prodID);\n      const categoryName = ((_categList$find = categList.find(item => (matchingProd === null || matchingProd === void 0 ? void 0 : matchingProd.category) === item[0])) === null || _categList$find === void 0 ? void 0 : _categList$find[1]) || '';\n      return {\n        name: reportItem.name,\n        item: (matchingProd === null || matchingProd === void 0 ? void 0 : matchingProd.prodName) || '',\n        quantity: reportItem.stock,\n        total: reportItem.total,\n        category: categoryName\n      };\n    });\n    setData(prevData => ({\n      ...prevData,\n      rows: updatedRows\n    }));\n    const totalPriceMap = report.reduce((acc, reportItem) => {\n      const matchingProd = prodList.find(prod => prod.prodID === reportItem.prodID);\n      if (matchingProd) {\n        const currentTotalPrice = acc[matchingProd.prodName] || 0;\n        acc[matchingProd.prodName] = currentTotalPrice + reportItem.total;\n      }\n      return acc;\n    }, {});\n    setProdTotalPriceMap(totalPriceMap);\n  }, [report, prodList, categList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: JSON.stringify(prodTotalPriceMap)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MDBDataTable, {\n      data: data,\n      sorting: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(Report, \"WplTxsQyGKEbs+w94ACB7fXiVMs=\");\n_c = Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["React","useState","useEffect","Table","MDBDataTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Report","prodList","categList","report","_s","data","setData","columns","label","field","sort","width","rows","prodTotalPriceMap","setProdTotalPriceMap","updatedRows","map","reportItem","_categList$find","matchingProd","find","prod","prodID","categoryName","item","category","name","prodName","quantity","stock","total","prevData","totalPriceMap","reduce","acc","currentTotalPrice","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","sorting","_c","$RefreshReg$"],"sources":["C:/Users/denso/Desktop/react/event-finals-main/event-finals-main/src/report.js"],"sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport Table from 'react-bootstrap/esm/Table';\nimport { MDBDataTable } from 'mdbreact';\n\n\nexport default function Report({ prodList, categList, report}){\n    const [data, setData] = useState ({\n        columns: [\n          {\n            label: 'Customer Name',\n            field: 'name',\n            sort: 'asc',\n            width: 150\n          },\n          {\n            label: 'Item Name',\n            field: 'item',\n            sort: 'asc',\n            width: 270\n          },\n          {\n            label: 'Quantity Ordered',\n            field: 'quantity',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Total Price',\n            field: 'total',\n            sort: 'asc',\n            width: 150\n          },\n        ],\n        rows: [\n\n        ]\n      })\n\n    const [prodTotalPriceMap, setProdTotalPriceMap] = useState({});\n\n    useEffect(() => {\n        const updatedRows = report.map((reportItem) => {\n          const matchingProd = prodList.find((prod) => prod.prodID === reportItem.prodID);\n          const categoryName = categList.find((item) => matchingProd?.category === item[0])?.[1] || '';\n    \n          return {\n            name: reportItem.name,\n            item: matchingProd?.prodName || '',\n            quantity: reportItem.stock,\n            total: reportItem.total,\n            category: categoryName,\n          };\n        });\n        \n        setData((prevData) => ({ ...prevData, rows: updatedRows }));\n\n        const totalPriceMap = report.reduce((acc, reportItem) => {\n            const matchingProd = prodList.find((prod) => prod.prodID === reportItem.prodID);\n            if (matchingProd) {\n            const currentTotalPrice = acc[matchingProd.prodName] || 0;\n            acc[matchingProd.prodName] = currentTotalPrice + reportItem.total;\n            }\n            return acc;\n        }, {});\n        \n        setProdTotalPriceMap(totalPriceMap);\n      }, [report, prodList, categList]);\n\n   return(\n    <>\n    <h1>{JSON.stringify(prodTotalPriceMap)}</h1>\n    {/* <Table>\n    <thead>\n        <tr>\n            <th>Customer Name</th>\n            <th>Item Name</th>\n            <th>Stock</th>\n            <th>Category</th>\n        </tr>\n    </thead>\n    <tbody>\n        {report.map(report=>(\n          \n          <tr>\n\n            <td>{report.name}</td>\n            {\n                prodList.map(prod=>{\n                    if(report.prodID === prod.prodID){\n                        return(\n                            <>\n                                <td>{prod.prodName}</td>\n                                <td>{report.stock}</td>\n\n                               {\n                                categList.map((item, index)=>{\n                                    if(prod.category === item[0]){\n                                        return (<td>{item[1]}</td>)\n                                    }\n                                    return null;\n                                })\n                                }\n                            </>\n                        )\n                    }\n                    return null;\n                })\n                }\n          </tr>  \n          \n        ))}\n    </tbody>\n</Table> */}\n<MDBDataTable\n      data={data}\n      sorting={false}\n    />\n    {/* <h1>{JSON.stringify(report)}</h1> */}\n</>\n   )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}