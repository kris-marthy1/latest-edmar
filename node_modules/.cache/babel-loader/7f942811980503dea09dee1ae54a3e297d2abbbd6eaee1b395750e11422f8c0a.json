{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ren\\\\Downloads\\\\edmar-finals-main\\\\src\\\\POS.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/esm/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PoS({\n  prodList,\n  categList,\n  setProdList,\n  onSendArrayReps,\n  onSendArrayToProd\n}) {\n  _s();\n  useEffect(() => {\n    onSendArrayToProd(prodList);\n  }, [prodList, onSendArrayToProd]);\n  const [name, setName] = useState('');\n  const [user, setUser] = useState({\n    name: ''\n  });\n  const [cart, setCart] = useState([]);\n  const [transaction, setTransaction] = useState([]);\n  const [productStocks, setProductStocks] = useState({});\n  console.log(transaction);\n  function handleTransaction() {\n    const transactionTemp = cart.filter(item => item.name === name);\n    setTransaction(prevTransactions => [...prevTransactions, ...transactionTemp]);\n    const updatedCart = cart.filter(item => item.name !== name);\n    setCart(updatedCart);\n  }\n  useEffect(() => {\n    onSendArrayReps(transaction);\n  }, [transaction, onSendArrayReps]);\n  function addToCart(id) {\n    // const stockValue = productStocks[id] || 0;prodList\n    // setCart([...cart, { name: name, prodID: id, stock: stockValue }])\n    // setProductStocks({ ...productStocks, [id]: '' })\n    // const stockValue = productStocks[id] || 0;\n    // const updatedCart = [...cart];\n    // const prodItem = prodList.findIndex(item => item.prodID === id )\n    // const existingCartItemIndex = updatedCart.findIndex(item => item.prodID === id);\n\n    const stockValue = productStocks[id] || 0;\n    const updatedCart = [...cart];\n    const prodItem = prodList.find(item => item.prodID === id);\n    const existingCartItemIndex = updatedCart.findIndex(item => item.prodID === id && user.name === item.name);\n    if (existingCartItemIndex !== -1) {\n      const Stock = updatedCart[existingCartItemIndex].stock;\n      const newStock = parseInt(Stock) + parseInt(stockValue);\n      if (newStock > prodItem.prodStocks) {\n        alert('Exceeded available stock');\n      } else if (newStock <= 0 && newStock === null) {\n        alert('Please input valid amount.');\n      } else {\n        updatedCart[existingCartItemIndex].stock = newStock;\n        const updatedProdList = prodList.map(prod => {\n          if (prodItem.prodID === prod.prodID) {\n            const Stock = prod.prodStocks - stockValue;\n            return {\n              ...prod,\n              prodStocks: Stock\n            };\n          }\n          return prod;\n        });\n        setProdList(updatedProdList);\n      }\n    } else {\n      if (parseInt(stockValue) <= prodItem.prodStocks) {\n        updatedCart.push({\n          name: name,\n          prodID: id,\n          stock: stockValue\n        });\n        const updatedProdList = prodList.map(prod => {\n          if (prodItem.prodID === prod.prodID) {\n            const Stock = prod.prodStocks - stockValue;\n            return {\n              ...prod,\n              prodStocks: Stock\n            };\n          }\n          return prod;\n        });\n        setProdList(updatedProdList);\n      } else {\n        alert('Exceeded available stock');\n      }\n    }\n    setCart(updatedCart);\n    setProductStocks({\n      ...productStocks,\n      [id]: ''\n    });\n\n    // if (existingCartItemIndex !== -1) {\n    //     let Stock = updatedCart[existingCartItemIndex].stock \n    //     if(Stock > prodList[prodItem].prodStocks){\n    //         alert(\"Exceeded amount\")\n    //     }else{\n    //         updatedCart[existingCartItemIndex].stock = parseInt(Stock) + parseInt(stockValue );\n    //     }\n\n    // } else {\n    //     updatedCart.push({ name: name, prodID: id, stock: stockValue });\n    // }\n\n    // setCart(updatedCart);\n    // setProductStocks({ ...productStocks, [id]: '' });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"\",\n      children: [user.name === '' ? /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlTextarea1\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setUser({\n                  ...user,\n                  name: name\n                });\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Col, {\n        md: 5,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Welcome \", user.name, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setUser({\n                name: ''\n              });\n            },\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Your Purchases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Item Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: cart.map(cart => cart.name === name ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 53\n              }, this), prodList.map(prod => {\n                if (cart.prodID === prod.prodID) {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: prod.prodName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: cart.stock\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 73\n                    }, this), categList.map((item, index) => {\n                      if (prod.category === item[0]) {\n                        return /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item[1]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 177,\n                          columnNumber: 93\n                        }, this);\n                      }\n                      return null;\n                    })]\n                  }, void 0, true);\n                }\n                return null;\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTransaction(),\n          children: \"Buy now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          children: prodList.map((prod, index) => prod.prodStocks <= 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mb-2\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '15rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: prod.prodName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Price: \", prod.prodPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Stock: \", prod.prodStocks]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 49\n                  }, this), categList.map((item, index) => {\n                    if (prod.category === item[0]) {\n                      return /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Category: \", item[1]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 69\n                      }, this);\n                    }\n                    return null;\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 41\n              }, this), user.name === '' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: productStocks[prod.prodID] || '',\n                  onChange: e => {\n                    setProductStocks({\n                      ...productStocks,\n                      [prod.prodID]: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addToCart(prod.prodID),\n                  children: \"Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_s(PoS, \"sSU6324hxKLlModJ3tIGA1xyt/o=\");\n_c = PoS;\nvar _c;\n$RefreshReg$(_c, \"PoS\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Form","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","PoS","prodList","categList","setProdList","onSendArrayReps","onSendArrayToProd","_s","name","setName","user","setUser","cart","setCart","transaction","setTransaction","productStocks","setProductStocks","console","log","handleTransaction","transactionTemp","filter","item","prevTransactions","updatedCart","addToCart","id","stockValue","prodItem","find","prodID","existingCartItemIndex","findIndex","Stock","stock","newStock","parseInt","prodStocks","alert","updatedProdList","map","prod","push","className","children","md","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","value","onChange","e","target","onClick","prodName","index","category","xs","style","width","Header","Body","Text","prodPrice","Footer","type","_c","$RefreshReg$"],"sources":["C:/Users/Ren/Downloads/edmar-finals-main/src/POS.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/esm/Table';\n\nexport default function PoS({ prodList, categList, setProdList, onSendArrayReps, onSendArrayToProd }) {\n\n    useEffect(() => {\n        onSendArrayToProd(prodList);\n    }, [prodList, onSendArrayToProd]);\n\n  \n\n    const [name, setName] = useState('')\n    const [user, setUser] = useState({\n        name: ''\n    })\n    const [cart, setCart] = useState([])\n    const [transaction, setTransaction] = useState([])\n    const [productStocks, setProductStocks] = useState({})\n    console.log(transaction)\n\n\n\n    function handleTransaction() {\n\n        const transactionTemp = cart.filter(item => item.name === name);\n        setTransaction(prevTransactions => [...prevTransactions, ...transactionTemp])\n\n        \n        const updatedCart = cart.filter(item => item.name !== name);\n        setCart(updatedCart);\n    }\n\n\n\n\n    useEffect(() => {\n        onSendArrayReps(transaction);\n    }, [transaction, onSendArrayReps]);\n\n    function addToCart(id) {\n        // const stockValue = productStocks[id] || 0;prodList\n        // setCart([...cart, { name: name, prodID: id, stock: stockValue }])\n        // setProductStocks({ ...productStocks, [id]: '' })\n        // const stockValue = productStocks[id] || 0;\n        // const updatedCart = [...cart];\n        // const prodItem = prodList.findIndex(item => item.prodID === id )\n        // const existingCartItemIndex = updatedCart.findIndex(item => item.prodID === id);\n        \n        const stockValue = productStocks[id] || 0;\n        const updatedCart = [...cart];\n        const prodItem = prodList.find(item => item.prodID === id);\n        const existingCartItemIndex = updatedCart.findIndex(item => item.prodID === id && user.name === item.name);\n\n        if (existingCartItemIndex !== -1) {\n            const Stock = updatedCart[existingCartItemIndex].stock;\n            const newStock = parseInt(Stock) + parseInt(stockValue);\n            \n            if (newStock > prodItem.prodStocks) {\n                alert('Exceeded available stock');\n            } else if (newStock <= 0 && newStock === null){\n                alert('Please input valid amount.')\n            } else {\n                updatedCart[existingCartItemIndex].stock = newStock;\n                const updatedProdList = prodList.map(prod => {\n                    if (prodItem.prodID === prod.prodID) {\n                        const Stock = prod.prodStocks - stockValue;\n                        return { ...prod, prodStocks: Stock };\n                    }\n                    return prod;\n                });\n        \n                setProdList(updatedProdList);\n            }\n        } else {\n            if (parseInt(stockValue) <= prodItem.prodStocks) {\n                updatedCart.push({ name: name, prodID: id, stock: stockValue });\n                const updatedProdList = prodList.map(prod => {\n                    if (prodItem.prodID === prod.prodID) {\n                        const Stock = prod.prodStocks - stockValue;\n                        return { ...prod, prodStocks: Stock };\n                    }\n                    return prod;\n                });\n        \n                setProdList(updatedProdList);\n            } else {\n                alert('Exceeded available stock');\n            }\n        }\n\n        \n\n\n\n        setCart(updatedCart);\n        setProductStocks({ ...productStocks, [id]: '' });\n\n        // if (existingCartItemIndex !== -1) {\n        //     let Stock = updatedCart[existingCartItemIndex].stock \n        //     if(Stock > prodList[prodItem].prodStocks){\n        //         alert(\"Exceeded amount\")\n        //     }else{\n        //         updatedCart[existingCartItemIndex].stock = parseInt(Stock) + parseInt(stockValue );\n        //     }\n\n\n        // } else {\n        //     updatedCart.push({ name: name, prodID: id, stock: stockValue });\n        // }\n\n        // setCart(updatedCart);\n        // setProductStocks({ ...productStocks, [id]: '' });\n    }\n\n    return (\n        <Container className=\"mt-3\">\n            <Row className=''>\n\n                {\n                    user.name === ''\n                        ?\n                        (\n                            <Col md={4} >\n                                <Form>\n                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                        <Form.Label>Email address</Form.Label>\n                                        <Form.Control value={name} onChange={e => setName(e.target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                        <button onClick={() => {\n                                            setUser({ ...user, name: name })\n                                        }}>Save</button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n\n                        )\n                        :\n                        (\n                            <Col md={5}>\n                                <div className='d-flex justify-content-between mb-4'>\n                                    <h3>Welcome {user.name}!</h3>\n                                    <button onClick={() => {\n                                        setUser({ name: '' })\n                                    }}>Log Out</button>\n                                </div>\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th>Your Purchases</th>\n                                            <th>Item Name</th>\n                                            <th>Stock</th>\n                                            <th>Category</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {cart.map(cart => (\n                                            cart.name === name ?\n                                                <tr>\n                                                    <td></td>\n                                                    {\n                                                        prodList.map(prod => {\n                                                            if (cart.prodID === prod.prodID) {\n                                                                return (\n                                                                    <>\n                                                                        <td>{prod.prodName}</td>\n                                                                        <td>{cart.stock}</td>\n\n                                                                        {\n                                                                            categList.map((item, index) => {\n                                                                                if (prod.category === item[0]) {\n                                                                                    return (<td>{item[1]}</td>)\n                                                                                }\n                                                                                return null;\n                                                                            })\n                                                                        }\n                                                                    </>\n                                                                )\n                                                            }\n                                                            return null;\n                                                        })\n                                                    }\n                                                </tr>\n                                                :\n                                                <></>\n                                        ))}\n                                    </tbody>\n                                </Table>\n                                <button onClick={() => handleTransaction()}>Buy now</button>\n                            </Col>\n                        )\n                }\n                <Col>\n                    <Row xs={2} md={3}>\n                        {/* aw */}\n                        {prodList.map((prod, index) => (\n                            prod.prodStocks <= 0 ?\n                                <></>\n                                :\n                                (<Col key={index} className=\"mb-2\">\n                                    <Card style={{ width: '15rem' }}>\n                                        <Card.Header>{prod.prodName}</Card.Header>\n                                        <Card.Body>\n                                            <Card.Text>\n                                                <p>Price: {prod.prodPrice}</p>\n                                                <p>Stock: {prod.prodStocks}</p>\n                                                {\n                                                    categList.map((item, index) => {\n                                                        if (prod.category === item[0]) {\n                                                            return (<p>Category: {item[1]}</p>)\n                                                        }\n                                                        return null;\n                                                    })\n                                                }\n                                            </Card.Text>\n                                        </Card.Body>\n                                        {user.name === ''\n                                            ?\n                                            <></>\n                                            :\n                                            <Card.Footer>\n                                                <input\n                                                    type=\"number\"\n                                                    value={productStocks[prod.prodID] || ''}\n                                                    onChange={e => {\n                                                        setProductStocks({ ...productStocks, [prod.prodID]: e.target.value });\n                                                    }}\n                                                />\n                                                <button onClick={() => addToCart(prod.prodID)}>Order</button>\n                                            </Card.Footer>\n                                        }\n                                    </Card>\n                                </Col>)\n                        ))}\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}