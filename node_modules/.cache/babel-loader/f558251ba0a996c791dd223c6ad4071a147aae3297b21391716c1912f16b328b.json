{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denso\\\\Desktop\\\\react\\\\finals\\\\main\\\\src\\\\addCateg.js\",\n  _s = $RefreshSig$();\nimport Container from 'react-bootstrap/Container';\nimport { useState } from \"react\";\n\n// export default function Categ({showP, onSendArrayToParent }){\n//     const [categName, setCategName ] = useState('') \n//     const [categList, setCategList] = useState([])\n\n//     const sendArrayToParent = () => {\n//         // Call the callback function from props and pass the array as an argument\n//         setCategList([...categList, categName])\n//         onSendArrayToParent(categList);\n//       };\n//     return(\n//        \n//             Category: <input\n//                 value={categName}\n//                 onChange={e => {\n//                     setCategName([...categName, e.target.value])\n//                 }}/>\n//                 <button onClick={sendArrayToParent}>Add</button>\n\n//        \n\n//     )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChildComponent({\n  showP,\n  onSendArrayToParent\n}) {\n  _s();\n  const [catName, setCatName] = useState('');\n  const [arrayToSend, setArrayToSend] = useState([]); // Array to be sent to the parent\n\n  function sendArray() {\n    // Call the callback function from props and pass the array as an argument\n    setArrayToSend([...arrayToSend, catName]);\n    setCatName('');\n  }\n  ;\n  onSendArrayToParent(arrayToSend);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      display: showP ? \"block\" : \"none\"\n    },\n    children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: catName,\n      onChange: e => setCatName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendArray,\n      children: \"Send Array to Parent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(ChildComponent, \"QZe9PvnrvESJHHiTryz+G3kwPmc=\");\n_c = ChildComponent;\nvar _c;\n$RefreshReg$(_c, \"ChildComponent\");","map":{"version":3,"names":["Container","useState","jsxDEV","_jsxDEV","ChildComponent","showP","onSendArrayToParent","_s","catName","setCatName","arrayToSend","setArrayToSend","sendArray","style","display","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/denso/Desktop/react/finals/main/src/addCateg.js"],"sourcesContent":["import Container from 'react-bootstrap/Container';\r\nimport { useState } from \"react\";\r\n\r\n\r\n// export default function Categ({showP, onSendArrayToParent }){\r\n//     const [categName, setCategName ] = useState('') \r\n//     const [categList, setCategList] = useState([])\r\n\r\n//     const sendArrayToParent = () => {\r\n//         // Call the callback function from props and pass the array as an argument\r\n//         setCategList([...categList, categName])\r\n//         onSendArrayToParent(categList);\r\n//       };\r\n//     return(\r\n//        \r\n//             Category: <input\r\n//                 value={categName}\r\n//                 onChange={e => {\r\n//                     setCategName([...categName, e.target.value])\r\n//                 }}/>\r\n//                 <button onClick={sendArrayToParent}>Add</button>\r\n            \r\n//        \r\n        \r\n//     )\r\n// }\r\nexport default function ChildComponent({ showP, onSendArrayToParent }) {\r\n    const [catName, setCatName] = useState('')\r\n    const [arrayToSend, setArrayToSend] = useState([]); // Array to be sent to the parent\r\n  \r\n    function sendArray() {\r\n      // Call the callback function from props and pass the array as an argument\r\n      setArrayToSend([...arrayToSend, catName])\r\n      setCatName('')\r\n    };\r\n    onSendArrayToParent(arrayToSend);\r\n    \r\n    return (\r\n        <Container style={{ display: showP ? \"block\" : \"none\" }}>\r\n       Name: \r\n             <input \r\n                value={catName}\r\n                onChange={e => \r\n                   setCatName(e.target.value)\r\n                    \r\n            }\r\n                \r\n            /><br/>\r\n        <button onClick={sendArray}>Send Array to Parent</button>\r\n        </Container>\r\n    );\r\n  }\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,SAASC,QAAQ,QAAQ,OAAO;;AAGhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,cAAcA,CAAC;EAAEC,KAAK;EAAEC;AAAoB,CAAC,EAAE;EAAAC,EAAA;EACnE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD,SAASW,SAASA,CAAA,EAAG;IACnB;IACAD,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEF,OAAO,CAAC,CAAC;IACzCC,UAAU,CAAC,EAAE,CAAC;EAChB;EAAC;EACDH,mBAAmB,CAACI,WAAW,CAAC;EAEhC,oBACIP,OAAA,CAACH,SAAS;IAACa,KAAK,EAAE;MAAEC,OAAO,EAAET,KAAK,GAAG,OAAO,GAAG;IAAO,CAAE;IAAAU,QAAA,GAAC,OAEpD,eAAAZ,OAAA;MACGa,KAAK,EAAER,OAAQ;MACfS,QAAQ,EAAEC,CAAC,IACRT,UAAU,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;IAE/B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC,eAAApB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACXpB,OAAA;MAAQqB,OAAO,EAAEZ,SAAU;MAAAG,QAAA,EAAC;IAAoB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAElB;AAAChB,EAAA,CAzBqBH,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}