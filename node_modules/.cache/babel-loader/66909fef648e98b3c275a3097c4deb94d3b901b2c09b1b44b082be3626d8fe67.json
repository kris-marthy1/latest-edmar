{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denso\\\\Desktop\\\\react\\\\finals\\\\main\\\\src\\\\POS.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PoS({\n  prodList,\n  categList\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [user, setUser] = useState({\n    name: '',\n    prodID: -1,\n    stock: -1\n  });\n  const [cart, setCart] = useState([]);\n  let count = 0;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"\",\n      children: [user.name === '' ? /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlTextarea1\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setUser({\n                  ...user,\n                  name: name\n                });\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Col, {\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Welcome \", user.name, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setUser({\n                ...user,\n                name: ''\n              });\n            },\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"d-flex \",\n        children: prodList.map(prod => count % 3 !== 0 ? /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"p-1\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '15rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: prod.prodName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(PoS, \"0lwmLEFK3nwGZuVGUpnP5zqVbjU=\");\n_c = PoS;\nvar _c;\n$RefreshReg$(_c, \"PoS\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Card","Form","jsxDEV","_jsxDEV","PoS","prodList","categList","_s","name","setName","user","setUser","prodID","stock","cart","setCart","count","className","children","md","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","value","onChange","e","target","onClick","map","prod","style","width","Header","prodName","Body","Text","Footer","_c","$RefreshReg$"],"sources":["C:/Users/denso/Desktop/react/finals/main/src/POS.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default function PoS({ prodList, categList }) {\r\n    \r\n    const [name, setName] = useState('')\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        prodID: -1,\r\n        stock: -1\r\n    })\r\n    const [cart, setCart] = useState([])\r\n    let count=0\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row className=''>\r\n                \r\n                    {\r\n                        user.name === '' \r\n                        ? \r\n                        (\r\n                        <Col md={4} >\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control value={name} onChange={e=>setName(e.target.value)} />\r\n                            </Form.Group>\r\n                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                                <button onClick={()=>{\r\n                                    setUser({...user, name: name})\r\n                                    }}>Save</button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        </Col>\r\n                        \r\n                        )\r\n                        : \r\n                        (\r\n                        <Col md={5}>\r\n                            <div className='d-flex justify-content-between'>\r\n                                <h3>Welcome {user.name}!</h3>\r\n                                <button onClick={()=>{\r\n                                     setUser({...user, name: ''})\r\n                                }}>Log Out</button>\r\n                            </div>\r\n                        </Col>\r\n                        )\r\n                    }\r\n                <Col className ='d-flex '>\r\n                \r\n                    {\r\n                        prodList.map(prod=>(\r\n                            (count % 3) !== 0 ?\r\n                            <Col md={4} className='p-1'>\r\n                                <Card style={{ width: '15rem'}} >\r\n                                    <Card.Header>{prod.prodName}</Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                        Some quick example text to build on the card title and make up the\r\n                                        bulk of the card's content.\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <button>Order</button>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                            </Col>\r\n                            :\r\n                            <Row>\r\n                                \r\n                            </Row>\r\n                        ))\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAEjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC;IAC7BY,IAAI,EAAE,EAAE;IACRI,MAAM,EAAE,CAAC,CAAC;IACVC,KAAK,EAAE,CAAC;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAIoB,KAAK,GAAC,CAAC;EACX,oBACIb,OAAA,CAACN,SAAS;IAACoB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACvBf,OAAA,CAACL,GAAG;MAACmB,SAAS,EAAC,EAAE;MAAAC,QAAA,GAGLR,IAAI,CAACF,IAAI,KAAK,EAAE,gBAGhBL,OAAA,CAACJ,GAAG;QAACoB,EAAE,EAAE,CAAE;QAAAD,QAAA,eACXf,OAAA,CAACF,IAAI;UAAAiB,QAAA,gBACDf,OAAA,CAACF,IAAI,CAACmB,KAAK;YAACH,SAAS,EAAC,MAAM;YAACI,SAAS,EAAC,2BAA2B;YAAAH,QAAA,gBAC9Df,OAAA,CAACF,IAAI,CAACqB,KAAK;cAAAJ,QAAA,EAAC;YAAa;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACtCvB,OAAA,CAACF,IAAI,CAAC0B,OAAO;cAACC,KAAK,EAAEpB,IAAK;cAACqB,QAAQ,EAAEC,CAAC,IAAErB,OAAO,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC,eACTvB,OAAA,CAACF,IAAI,CAACmB,KAAK;YAACH,SAAS,EAAC,MAAM;YAACI,SAAS,EAAC,8BAA8B;YAAAH,QAAA,eACrEf,OAAA;cAAQ6B,OAAO,EAAEA,CAAA,KAAI;gBACjBrB,OAAO,CAAC;kBAAC,GAAGD,IAAI;kBAAEF,IAAI,EAAEA;gBAAI,CAAC,CAAC;cAC9B,CAAE;cAAAU,QAAA,EAAC;YAAI;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,gBAKNvB,OAAA,CAACJ,GAAG;QAACoB,EAAE,EAAE,CAAE;QAAAD,QAAA,eACPf,OAAA;UAAKc,SAAS,EAAC,gCAAgC;UAAAC,QAAA,gBAC3Cf,OAAA;YAAAe,QAAA,GAAI,UAAQ,EAACR,IAAI,CAACF,IAAI,EAAC,GAAC;UAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BvB,OAAA;YAAQ6B,OAAO,EAAEA,CAAA,KAAI;cAChBrB,OAAO,CAAC;gBAAC,GAAGD,IAAI;gBAAEF,IAAI,EAAE;cAAE,CAAC,CAAC;YACjC,CAAE;YAAAU,QAAA,EAAC;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACJ,eAETvB,OAAA,CAACJ,GAAG;QAACkB,SAAS,EAAE,SAAS;QAAAC,QAAA,EAGjBb,QAAQ,CAAC4B,GAAG,CAACC,IAAI,IACZlB,KAAK,GAAG,CAAC,KAAM,CAAC,gBACjBb,OAAA,CAACJ,GAAG;UAACoB,EAAE,EAAE,CAAE;UAACF,SAAS,EAAC,KAAK;UAAAC,QAAA,eACvBf,OAAA,CAACH,IAAI;YAACmC,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAO,CAAE;YAAAlB,QAAA,gBAC3Bf,OAAA,CAACH,IAAI,CAACqC,MAAM;cAAAnB,QAAA,EAAEgB,IAAI,CAACI;YAAQ;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC,eAC1CvB,OAAA,CAACH,IAAI,CAACuC,IAAI;cAAArB,QAAA,eACNf,OAAA,CAACH,IAAI,CAACwC,IAAI;gBAAAtB,QAAA,EAAC;cAGX;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACZvB,OAAA,CAACH,IAAI,CAACyC,MAAM;cAAAvB,QAAA,eACRf,OAAA;gBAAAe,QAAA,EAAQ;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,gBAENvB,OAAA,CAACL,GAAG;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEC,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB;AAACnB,EAAA,CA1EuBH,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}