{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denso\\\\Desktop\\\\react\\\\event-finals-main\\\\event-finals-main\\\\src\\\\report.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/esm/Table';\nimport { MDBDataTable } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Report({\n  prodList,\n  categList,\n  report\n}) {\n  _s();\n  const [data, setData] = useState({\n    columns: [{\n      label: 'Customer Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Item Name',\n      field: 'item',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Quantity Ordered',\n      field: 'quantity',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Total Price',\n      field: 'total',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: []\n  });\n  const [row, setRow] = useState({\n    name: '',\n    item: '',\n    quantity: '',\n    total: ''\n  });\n  useEffect(() => {\n    const updatedRows = report.map(reportItem => {\n      var _categList$find;\n      const matchingProd = prodList.find(prod => prod.prodID === reportItem.prodID);\n      const categoryName = ((_categList$find = categList.find(item => (matchingProd === null || matchingProd === void 0 ? void 0 : matchingProd.category) === item[0])) === null || _categList$find === void 0 ? void 0 : _categList$find[1]) || '';\n      return {\n        name: reportItem.name,\n        item: (matchingProd === null || matchingProd === void 0 ? void 0 : matchingProd.prodName) || '',\n        quantity: reportItem.stock,\n        total: reportItem.total,\n        category: categoryName\n      };\n    });\n    setData(prevData => ({\n      ...prevData,\n      rows: updatedRows\n    }));\n  }, [report, prodList, categList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Item Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: report.map(report => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: report.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), prodList.map(prod => {\n            if (report.prodID === prod.prodID) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prod.prodName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: report.stock\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 33\n                }, this), categList.map((item, index) => {\n                  if (prod.category === item[0]) {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item[1]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 49\n                    }, this);\n                  }\n                  return null;\n                })]\n              }, void 0, true);\n            }\n            return null;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MDBDataTable, {\n      data: data,\n      sorting: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(Report, \"zjCeFFW4osz9vD+WQqI0l0Nsq7w=\");\n_c = Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["React","useState","useEffect","Table","MDBDataTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Report","prodList","categList","report","_s","data","setData","columns","label","field","sort","width","rows","row","setRow","name","item","quantity","total","updatedRows","map","reportItem","_categList$find","matchingProd","find","prod","prodID","categoryName","category","prodName","stock","prevData","children","fileName","_jsxFileName","lineNumber","columnNumber","index","sorting","_c","$RefreshReg$"],"sources":["C:/Users/denso/Desktop/react/event-finals-main/event-finals-main/src/report.js"],"sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport Table from 'react-bootstrap/esm/Table';\nimport { MDBDataTable } from 'mdbreact';\n\n\nexport default function Report({ prodList, categList, report}){\n    const [data, setData] = useState ({\n        columns: [\n          {\n            label: 'Customer Name',\n            field: 'name',\n            sort: 'asc',\n            width: 150\n          },\n          {\n            label: 'Item Name',\n            field: 'item',\n            sort: 'asc',\n            width: 270\n          },\n          {\n            label: 'Quantity Ordered',\n            field: 'quantity',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Total Price',\n            field: 'total',\n            sort: 'asc',\n            width: 150\n          },\n        ],\n        rows: [\n\n        ]\n      })\n    const [row, setRow] = useState({\n        name: '',\n        item: '',\n        quantity: '',\n        total: ''\n    })\n\n    \n    useEffect(() => {\n        const updatedRows = report.map((reportItem) => {\n          const matchingProd = prodList.find((prod) => prod.prodID === reportItem.prodID);\n          const categoryName = categList.find((item) => matchingProd?.category === item[0])?.[1] || '';\n    \n          return {\n            name: reportItem.name,\n            item: matchingProd?.prodName || '',\n            quantity: reportItem.stock,\n            total: reportItem.total,\n            category: categoryName,\n          };\n        });\n    \n        setData((prevData) => ({ ...prevData, rows: updatedRows }));\n      }, [report, prodList, categList]);\n      \n   return(\n    <>\n    <Table>\n    <thead>\n        <tr>\n            <th>Customer Name</th>\n            <th>Item Name</th>\n            <th>Stock</th>\n            <th>Category</th>\n        </tr>\n    </thead>\n    <tbody>\n        {report.map(report=>(\n          \n          <tr>\n\n            <td>{report.name}</td>\n            {\n                prodList.map(prod=>{\n                    if(report.prodID === prod.prodID){\n                        return(\n                            <>\n                                <td>{prod.prodName}</td>\n                                <td>{report.stock}</td>\n\n                               {\n                                categList.map((item, index)=>{\n                                    if(prod.category === item[0]){\n                                        return (<td>{item[1]}</td>)\n                                    }\n                                    return null;\n                                })\n                                }\n                            </>\n                        )\n                    }\n                    return null;\n                })\n                }\n          </tr>  \n          \n        ))}\n    </tbody>\n</Table>\n<MDBDataTable\n      data={data}\n      sorting={false}\n    />\n    {/* <h1>{JSON.stringify(report)}</h1> */}\n</>\n   )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}