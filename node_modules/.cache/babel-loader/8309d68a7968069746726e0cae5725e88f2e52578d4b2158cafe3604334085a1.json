{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denso\\\\Desktop\\\\react\\\\event-finals-main\\\\event-finals-main\\\\src\\\\POS.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/esm/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PoS({\n  prodList,\n  categList,\n  setProdList,\n  onSendArrayReps,\n  onSendArrayToProd\n}) {\n  _s();\n  useEffect(() => {\n    onSendArrayToProd(prodList);\n  }, [prodList, onSendArrayToProd]);\n  const [name, setName] = useState('');\n  const [user, setUser] = useState({\n    name: ''\n  });\n  const [cart, setCart] = useState([]);\n  const [transaction, setTransaction] = useState([]);\n  const [productStocks, setProductStocks] = useState({});\n  console.log(transaction);\n  useEffect(() => {\n    onSendArrayReps(transaction);\n  }, [transaction, onSendArrayReps]);\n\n  // function addToCart(id) {\n\n  //     const stockValue = productStocks[id] || 0;\n  //     const updatedCart = [...cart];\n  //     const prodItem = prodList.find(item => item.prodID === id);\n  //     const existingCartItemIndex = updatedCart.findIndex(item => item.prodID === id && user.name === item.name);\n\n  //     if (existingCartItemIndex !== -1) {\n  //         const Stock = updatedCart[existingCartItemIndex].stock;\n  //         const newStock = parseInt(Stock) + parseInt(stockValue);\n\n  //         if (newStock > prodItem.prodStocks) {\n  //             alert('Exceeded available stock');\n  //         } else {\n  //             updatedCart[existingCartItemIndex].stock = newStock;\n  //             const updatedProdList = prodList.map(prod => {\n  //                 if (prodItem.prodID === prod.prodID) {\n  //                     const Stock = prod.prodStocks - stockValue;\n  //                     return { ...prod, prodStocks: Stock };\n  //                 }\n  //                 return prod;\n  //             });\n\n  //             setProdList(updatedProdList);\n  //         }\n  //     } else {\n  //         if (parseInt(stockValue) <= prodItem.prodStocks) {\n  //             const totalPrice = prodItem.prodPrice * stockValue\n  //             updatedCart.push({ name: name, prodID: id, stock: stockValue, total: totalPrice });\n  //             const updatedProdList = prodList.map(prod => {\n  //                 if (prodItem.prodID === prod.prodID) {\n  //                     const Stock = prod.prodStocks - stockValue;\n  //                     return { ...prod, prodStocks: Stock };\n  //                 }\n  //                 return prod;\n  //             });\n\n  //             setProdList(updatedProdList);\n  //         } else {\n  //             alert('Exceeded available stock');\n  //         }\n  //     }\n\n  //     setCart(updatedCart);\n  //     setProductStocks({ ...productStocks, [id]: '' });   \n  //     setTransaction(updatedCart)\n  // }\n  function addToCart(id) {\n    if (user.name === 'customer') {\n      const stockValue = productStocks[id] || 0;\n      const updatedCart = [...cart];\n      const prodItem = prodList.find(item => item.prodID === id);\n      const existingCartItemIndex = updatedCart.findIndex(item => item.prodID === id && user.name === item.name);\n      if (existingCartItemIndex !== -1) {\n        const Stock = updatedCart[existingCartItemIndex].stock;\n        const newStock = parseInt(Stock) + parseInt(stockValue);\n        if (newStock > prodItem.prodStocks) {\n          alert('Exceeded available stock');\n        } else {\n          updatedCart[existingCartItemIndex].stock = newStock;\n          const updatedProdList = prodList.map(prod => {\n            if (prodItem.prodID === prod.prodID) {\n              const Stock = prod.prodStocks - stockValue;\n              return {\n                ...prod,\n                prodStocks: Stock\n              };\n            }\n            return prod;\n          });\n          setProdList(updatedProdList);\n        }\n      } else {\n        if (parseInt(stockValue) <= prodItem.prodStocks) {\n          const totalPrice = prodItem.prodPrice * stockValue;\n          updatedCart.push({\n            name: name,\n            prodID: id,\n            stock: stockValue,\n            total: totalPrice\n          });\n          const updatedProdList = prodList.map(prod => {\n            if (prodItem.prodID === prod.prodID) {\n              const Stock = prod.prodStocks - stockValue;\n              return {\n                ...prod,\n                prodStocks: Stock\n              };\n            }\n            return prod;\n          });\n          setProdList(updatedProdList);\n        } else {\n          alert('Exceeded available stock');\n        }\n      }\n      setCart(updatedCart);\n      setProductStocks({\n        ...productStocks,\n        [id]: ''\n      });\n      setTransaction(updatedCart);\n    } else {\n      alert('Please log in as a customer to perform this action.');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"\",\n      children: [user.name === '' ? /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Your name?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlTextarea1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setUser({\n                  ...user,\n                  name: name\n                });\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setUserE(''),\n              children: \"Exit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Col, {\n        md: 5,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Welcome \", user.name, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setUser({\n                name: ''\n              });\n            },\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Your Purchases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Item Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: cart.map(cart => cart.name === name ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 53\n              }, this), prodList.map(prod => {\n                if (cart.prodID === prod.prodID) {\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: prod.prodName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: cart.stock\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 73\n                    }, this), categList.map((item, index) => {\n                      if (prod.category === item[0]) {\n                        return /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item[1]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 194,\n                          columnNumber: 93\n                        }, this);\n                      }\n                      return null;\n                    })]\n                  }, void 0, true);\n                }\n                return null;\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cart.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          children: prodList.map((prod, index) => prod.prodStocks <= 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mb-2\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '15rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: prod.prodName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Price: \", prod.prodPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Stock: \", prod.prodStocks]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 49\n                  }, this), categList.map((item, index) => {\n                    if (prod.category === item[0]) {\n                      return /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [\"Category: \", item[1]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 69\n                      }, this);\n                    }\n                    return null;\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this), user.name === '' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: productStocks[prod.prodID] || '',\n                  onChange: e => {\n                    setProductStocks({\n                      ...productStocks,\n                      [prod.prodID]: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addToCart(prod.prodID),\n                  children: \"Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(PoS, \"sSU6324hxKLlModJ3tIGA1xyt/o=\");\n_c = PoS;\nvar _c;\n$RefreshReg$(_c, \"PoS\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Form","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","PoS","prodList","categList","setProdList","onSendArrayReps","onSendArrayToProd","_s","name","setName","user","setUser","cart","setCart","transaction","setTransaction","productStocks","setProductStocks","console","log","addToCart","id","stockValue","updatedCart","prodItem","find","item","prodID","existingCartItemIndex","findIndex","Stock","stock","newStock","parseInt","prodStocks","alert","updatedProdList","map","prod","totalPrice","prodPrice","push","total","className","children","fileName","_jsxFileName","lineNumber","columnNumber","md","Group","controlId","Label","Control","value","onChange","e","target","onClick","setUserE","prodName","index","category","xs","style","width","Header","Body","Text","Footer","type","_c","$RefreshReg$"],"sources":["C:/Users/denso/Desktop/react/event-finals-main/event-finals-main/src/POS.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/esm/Table';\n\nexport default function PoS({ prodList, categList, setProdList, onSendArrayReps, onSendArrayToProd }) {\n\n    useEffect(() => {\n        onSendArrayToProd(prodList);\n    }, [prodList, onSendArrayToProd]);\n\n  \n\n    const [name, setName] = useState('')\n    const [user, setUser] = useState({\n        name: ''\n    })\n    const [cart, setCart] = useState([])\n    const [transaction, setTransaction] = useState([])\n    const [productStocks, setProductStocks] = useState({})\n    console.log(transaction)\n\n\n\n\n\n\n\n    useEffect(() => {\n        onSendArrayReps(transaction);\n    }, [transaction, onSendArrayReps]);\n\n    // function addToCart(id) {\n        \n    //     const stockValue = productStocks[id] || 0;\n    //     const updatedCart = [...cart];\n    //     const prodItem = prodList.find(item => item.prodID === id);\n    //     const existingCartItemIndex = updatedCart.findIndex(item => item.prodID === id && user.name === item.name);\n\n    //     if (existingCartItemIndex !== -1) {\n    //         const Stock = updatedCart[existingCartItemIndex].stock;\n    //         const newStock = parseInt(Stock) + parseInt(stockValue);\n            \n    //         if (newStock > prodItem.prodStocks) {\n    //             alert('Exceeded available stock');\n    //         } else {\n    //             updatedCart[existingCartItemIndex].stock = newStock;\n    //             const updatedProdList = prodList.map(prod => {\n    //                 if (prodItem.prodID === prod.prodID) {\n    //                     const Stock = prod.prodStocks - stockValue;\n    //                     return { ...prod, prodStocks: Stock };\n    //                 }\n    //                 return prod;\n    //             });\n        \n    //             setProdList(updatedProdList);\n    //         }\n    //     } else {\n    //         if (parseInt(stockValue) <= prodItem.prodStocks) {\n    //             const totalPrice = prodItem.prodPrice * stockValue\n    //             updatedCart.push({ name: name, prodID: id, stock: stockValue, total: totalPrice });\n    //             const updatedProdList = prodList.map(prod => {\n    //                 if (prodItem.prodID === prod.prodID) {\n    //                     const Stock = prod.prodStocks - stockValue;\n    //                     return { ...prod, prodStocks: Stock };\n    //                 }\n    //                 return prod;\n    //             });\n        \n    //             setProdList(updatedProdList);\n    //         } else {\n    //             alert('Exceeded available stock');\n    //         }\n    //     }\n\n    //     setCart(updatedCart);\n    //     setProductStocks({ ...productStocks, [id]: '' });   \n    //     setTransaction(updatedCart)\n    // }\n    function addToCart(id) {\n        if (user.name === 'customer') {\n            const stockValue = productStocks[id] || 0;\n            const updatedCart = [...cart];\n            const prodItem = prodList.find(item => item.prodID === id);\n            const existingCartItemIndex = updatedCart.findIndex(item => item.prodID === id && user.name === item.name);\n    \n            if (existingCartItemIndex !== -1) {\n                const Stock = updatedCart[existingCartItemIndex].stock;\n                const newStock = parseInt(Stock) + parseInt(stockValue);\n    \n                if (newStock > prodItem.prodStocks) {\n                    alert('Exceeded available stock');\n                } else {\n                    updatedCart[existingCartItemIndex].stock = newStock;\n                    const updatedProdList = prodList.map(prod => {\n                        if (prodItem.prodID === prod.prodID) {\n                            const Stock = prod.prodStocks - stockValue;\n                            return { ...prod, prodStocks: Stock };\n                        }\n                        return prod;\n                    });\n    \n                    setProdList(updatedProdList);\n                }\n            } else {\n                if (parseInt(stockValue) <= prodItem.prodStocks) {\n                    const totalPrice = prodItem.prodPrice * stockValue;\n                    updatedCart.push({ name: name, prodID: id, stock: stockValue, total: totalPrice });\n                    const updatedProdList = prodList.map(prod => {\n                        if (prodItem.prodID === prod.prodID) {\n                            const Stock = prod.prodStocks - stockValue;\n                            return { ...prod, prodStocks: Stock };\n                        }\n                        return prod;\n                    });\n    \n                    setProdList(updatedProdList);\n                } else {\n                    alert('Exceeded available stock');\n                }\n            }\n    \n            setCart(updatedCart);\n            setProductStocks({ ...productStocks, [id]: '' });\n            setTransaction(updatedCart);\n        } else {\n            alert('Please log in as a customer to perform this action.');\n        }\n    }\n    \n    return (\n        <Container className=\"mt-3\">\n            <h1 className='text-center'>Order</h1>\n            <Row className=''>\n\n                {\n                    user.name === ''\n                        ?\n                        (\n                            <Col md={4} >\n                                <Form>\n                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                        <Form.Label>Your name?</Form.Label>\n                                        <Form.Control value={name} onChange={e => setName(e.target.value)} />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                        <button onClick={() => {\n                                            setUser({ ...user, name: name })\n                                        }}>Save</button>\n                                        <button onClick={()=>setUserE('')}>Exit</button>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n\n                        )\n                        :\n                        (\n                            <Col md={5}>\n                                <div className='d-flex justify-content-between mb-4'>\n                                    <h3>Welcome {user.name}!</h3>\n                                    <button onClick={() => {\n                                        setUser({ name: '' })\n                                    }}>Log Out</button>\n                                </div>\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th>Your Purchases</th>\n                                            <th>Item Name</th>\n                                            <th>Stock</th>\n                                            <th>Category</th>\n                                            <th>Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {cart.map(cart => (\n                                            cart.name === name ?\n                                                <tr>\n                                                    <td></td>\n                                                    {\n                                                        prodList.map(prod => {\n                                                            if (cart.prodID === prod.prodID) {\n                                                                return (\n                                                                    <>\n                                                                        <td>{prod.prodName}</td>\n                                                                        <td>{cart.stock}</td>\n\n                                                                        {\n                                                                            categList.map((item, index) => {\n                                                                                if (prod.category === item[0]) {\n                                                                                    return (<td>{item[1]}</td>)\n                                                                                }\n                                                                                return null;\n                                                                            })\n                                                                        }\n                                                                    </>\n                                                                )\n                                                            }\n                                                            return null;\n                                                        })\n                                                    }\n                                                    <td>{cart.total}</td>\n                                                </tr>\n                                                :\n                                                <></>\n                                        ))}\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        )\n                }\n                <Col>\n                    <Row xs={2} md={3}>\n                        {/* aw */}\n                        {prodList.map((prod, index) => (\n                            prod.prodStocks <= 0 ?\n                                <></>\n                                :\n                                (<Col key={index} className=\"mb-2\">\n                                    <Card style={{ width: '15rem' }}>\n                                        <Card.Header>{prod.prodName}</Card.Header>\n                                        <Card.Body>\n                                            <Card.Text>\n                                                <p>Price: {prod.prodPrice}</p>\n                                                <p>Stock: {prod.prodStocks}</p>\n                                                {\n                                                    categList.map((item, index) => {\n                                                        if (prod.category === item[0]) {\n                                                            return (<p>Category: {item[1]}</p>)\n                                                        }\n                                                        return null;\n                                                    })\n                                                }\n                                            </Card.Text>\n                                        </Card.Body>\n                                        {user.name === ''\n                                            ?\n                                            <></>\n                                            :\n                                            <Card.Footer>\n                                                <input\n                                                    type=\"number\"\n                                                    value={productStocks[prod.prodID] || ''}\n                                                    onChange={e => {\n                                                        setProductStocks({ ...productStocks, [prod.prodID]: e.target.value });\n                                                    }}\n                                                />\n                                                <button onClick={() => addToCart(prod.prodID)}>Order</button>\n                                            </Card.Footer>\n                                        }\n                                    </Card>\n                                </Col>)\n                        ))}\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}