{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denso\\\\Desktop\\\\react\\\\event-finals-main\\\\event-finals-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n// import Container from 'react-bootstrap/Container';\n// import Nav from 'react-bootstrap/Nav';\n// import Navbar from 'react-bootstrap/Navbar';\nimport AddProduct from './addProduct';\nimport Categ from './addCateg';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport PoS from './POS';\nimport Reports from './report';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CollapsibleExample() {\n  _s();\n  const [catList, setCatList] = useState([]);\n  const [prodList, setProdList] = useState([]);\n  const [report, setReport] = useState([]);\n  const [user, setUser] = useState('');\n  // Update prodList whenever arrayForProd changes\n  const handleProdList = arrayForProd => {\n    setProdList(arrayForProd);\n  };\n  useEffect(() => {\n    // This will execute whenever prodList changes\n    handleProdList(prodList);\n  }, [prodList]);\n  const handleCatList = arrayFromAddCateg => {\n    setCatList(arrayFromAddCateg);\n  };\n  const handleReport = arrayFromReport => {\n    setReport(arrayFromReport);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column align-items-center justify-content-center vh-100 vw-100 border border-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Are you a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUser('Admin'),\n        children: \"Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUser(\"customer\"),\n        children: \"Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CollapsibleExample, \"iHA++S1R/NEsWA3T5eP+Cqcd6VA=\");\n_c = CollapsibleExample;\nvar _c;\n$RefreshReg$(_c, \"CollapsibleExample\");","map":{"version":3,"names":["useState","useEffect","AddProduct","Categ","Tab","Tabs","PoS","Reports","jsxDEV","_jsxDEV","Fragment","_Fragment","CollapsibleExample","_s","catList","setCatList","prodList","setProdList","report","setReport","user","setUser","handleProdList","arrayForProd","handleCatList","arrayFromAddCateg","handleReport","arrayFromReport","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/denso/Desktop/react/event-finals-main/event-finals-main/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n// import Container from 'react-bootstrap/Container';\n// import Nav from 'react-bootstrap/Nav';\n// import Navbar from 'react-bootstrap/Navbar';\nimport AddProduct from './addProduct';\nimport Categ from './addCateg'\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport PoS from './POS'\nimport Reports from './report'\n\nexport default function CollapsibleExample() {\n  \n  const [catList, setCatList] = useState([]);\n  const [prodList, setProdList] = useState([]);\n  const [report, setReport] = useState([]);\n  const [user, setUser] = useState('')\n  // Update prodList whenever arrayForProd changes\n  const handleProdList = (arrayForProd) => {\n    setProdList(arrayForProd);\n  };\n\n  useEffect(() => {\n    // This will execute whenever prodList changes\n    handleProdList(prodList);\n  }, [prodList,]);\n\n  const handleCatList = (arrayFromAddCateg) => {\n    setCatList(arrayFromAddCateg);\n  };\n  const handleReport = (arrayFromReport) => {\n    setReport(arrayFromReport);\n  };\n\n  return (\n    <>\n      <div className='d-flex flex-column align-items-center justify-content-center vh-100 vw-100 border border-info'>\n        <h2>Are you a</h2>\n        <button onClick={()=> setUser('Admin')}>Admin</button> or <button onClick={()=>setUser(\"customer\")}>Customer</button>\n      </div>\n\n        \n    </>\n  );\n}\n\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AACA;AACA;AACA,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,OAAO,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAE3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAMsB,cAAc,GAAIC,YAAY,IAAK;IACvCN,WAAW,CAACM,YAAY,CAAC;EAC3B,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd;IACAqB,cAAc,CAACN,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACA,QAAQ,CAAE,CAAC;EAEf,MAAMQ,aAAa,GAAIC,iBAAiB,IAAK;IAC3CV,UAAU,CAACU,iBAAiB,CAAC;EAC/B,CAAC;EACD,MAAMC,YAAY,GAAIC,eAAe,IAAK;IACxCR,SAAS,CAACQ,eAAe,CAAC;EAC5B,CAAC;EAED,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA;MAAKoB,SAAS,EAAC,+FAA+F;MAAAD,QAAA,gBAC5GnB,OAAA;QAAAmB,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBxB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAKb,OAAO,CAAC,OAAO,CAAE;QAAAO,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,QAAI,eAAAxB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAIb,OAAO,CAAC,UAAU,CAAE;QAAAO,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClH;EAAC,gBAGN,CAAC;AAEP;AAACpB,EAAA,CAjCuBD,kBAAkB;AAAAuB,EAAA,GAAlBvB,kBAAkB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}