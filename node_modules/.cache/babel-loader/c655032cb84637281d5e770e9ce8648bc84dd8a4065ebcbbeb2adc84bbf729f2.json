{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denso\\\\Desktop\\\\react\\\\event-finals-main\\\\event-finals-main\\\\src\\\\report.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import Container from 'react-bootstrap/Container';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n// import Card from 'react-bootstrap/Card';\n// import Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/esm/Table';\nimport { MDBDataTable } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Report({\n  prodList,\n  categList,\n  report\n}) {\n  _s();\n  const [data, setData] = useState({\n    columns: [{\n      label: 'Customer Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Item Name',\n      field: 'item',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Quantity Ordered',\n      field: 'quantity',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Total Price',\n      field: 'total',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: []\n  });\n  const [row, setRow] = useState({\n    name: '',\n    item: '',\n    quantity: '',\n    total: ''\n  });\n  function updateTB() {\n    report.map(report => {\n      setRow({\n        ...row,\n        name: report.name,\n        quantity: report.stock,\n        total: report.total\n      });\n      prodList.map(prod => {\n        if (report.prodID === prod.prodID) {\n          setRow({\n            ...row,\n            item: prod.prodName\n          });\n        }\n      });\n      setData({\n        ...data,\n        rows: [...rows]\n      });\n    });\n  }\n  useEffect(() => {\n    updateTB();\n  }, [report, updateTB]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Item Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: report.map(report => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: report.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), prodList.map(prod => {\n            if (report.prodID === prod.prodID) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: prod.prodName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: report.stock\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 33\n                }, this), categList.map((item, index) => {\n                  if (prod.category === item[0]) {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item[1]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 49\n                    }, this);\n                  }\n                  return null;\n                })]\n              }, void 0, true);\n            }\n            return null;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: JSON.stringify(report)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Report, \"zjCeFFW4osz9vD+WQqI0l0Nsq7w=\");\n_c = Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["React","useState","useEffect","Table","MDBDataTable","jsxDEV","_jsxDEV","Fragment","_Fragment","Report","prodList","categList","report","_s","data","setData","columns","label","field","sort","width","rows","row","setRow","name","item","quantity","total","updateTB","map","stock","prod","prodID","prodName","children","fileName","_jsxFileName","lineNumber","columnNumber","index","category","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/denso/Desktop/react/event-finals-main/event-finals-main/src/report.js"],"sourcesContent":["import React, { useState, useEffect }  from 'react';\n// import Container from 'react-bootstrap/Container';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n// import Card from 'react-bootstrap/Card';\n// import Form from 'react-bootstrap/Form';\nimport Table from 'react-bootstrap/esm/Table';\nimport { MDBDataTable } from 'mdbreact';\n\n\nexport default function Report({ prodList, categList, report}){\n    const [data, setData] = useState ({\n        columns: [\n          {\n            label: 'Customer Name',\n            field: 'name',\n            sort: 'asc',\n            width: 150\n          },\n          {\n            label: 'Item Name',\n            field: 'item',\n            sort: 'asc',\n            width: 270\n          },\n          {\n            label: 'Quantity Ordered',\n            field: 'quantity',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Total Price',\n            field: 'total',\n            sort: 'asc',\n            width: 150\n          },\n        ],\n        rows: [\n\n        ]\n      })\n    const [row, setRow] = useState({\n        name: '',\n        item: '',\n        quantity: '',\n        total: ''\n    })\n\n    \n    function updateTB(){\n        report.map(report=>{\n            setRow({...row, name: report.name, quantity: report.stock, total: report.total})\n            prodList.map(prod=>{\n            if(report.prodID === prod.prodID){\n                setRow({...row, item: prod.prodName})\n            }\n            })\n            setData({...data, rows: [...rows, ]})\n        })\n    }\n\n\n    useEffect(() => {\n        updateTB()\n    }, [report, updateTB]);\n   return(\n    <>\n    <Table>\n    <thead>\n        <tr>\n            <th>Customer Name</th>\n            <th>Item Name</th>\n            <th>Stock</th>\n            <th>Category</th>\n        </tr>\n    </thead>\n    <tbody>\n        {report.map(report=>(\n          \n          <tr>\n\n            <td>{report.name}</td>\n            {\n                prodList.map(prod=>{\n                    if(report.prodID === prod.prodID){\n                        return(\n                            <>\n                                <td>{prod.prodName}</td>\n                                <td>{report.stock}</td>\n\n                               {\n                                categList.map((item, index)=>{\n                                    if(prod.category === item[0]){\n                                        return (<td>{item[1]}</td>)\n                                    }\n                                    return null;\n                                })\n                                }\n                            </>\n                        )\n                    }\n                    return null;\n                })\n                }\n          </tr>  \n          \n        ))}\n    </tbody>\n</Table>\n{/* <MDBDataTable\n      data={data}\n      sorting={false}\n    /> */}\n    <h1>{JSON.stringify(report)}</h1>\n</>\n   )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}