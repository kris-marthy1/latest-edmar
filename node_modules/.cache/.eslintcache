[{"C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\index.js":"1","C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\App.js":"2","C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\reportWebVitals.js":"3","C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\addProduct.js":"4","C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\POS.js":"5","C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\report.js":"6","C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\addCateg.js":"7"},{"size":584,"mtime":1701865615947,"results":"8","hashOfConfig":"9"},{"size":2287,"mtime":1702039249922,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1701865616039,"results":"11","hashOfConfig":"9"},{"size":8557,"mtime":1702433335557,"results":"12","hashOfConfig":"9"},{"size":10611,"mtime":1702433523625,"results":"13","hashOfConfig":"9"},{"size":3363,"mtime":1702468722897,"results":"14","hashOfConfig":"9"},{"size":2901,"mtime":1701865615787,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"15rbdj",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\index.js",[],[],["39","40","41","42","43","44"],"C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\App.js",[],[],"C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\reportWebVitals.js",[],[],"C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\addProduct.js",[],[],"C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\POS.js",[],[],"C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\report.js",["45"],[],"import React, { useState, useEffect }  from 'react';\nimport Table from 'react-bootstrap/esm/Table';\nimport { MDBDataTable } from 'mdbreact';\n\n\nexport default function Report({ prodList, categList, report}){\n    const [data, setData] = useState ({\n        columns: [\n          {\n            label: 'Customer Name',\n            field: 'name',\n            sort: 'asc',\n            width: 150\n          },\n          {\n            label: 'Item Name',\n            field: 'item',\n            sort: 'asc',\n            width: 270\n          },\n          {\n            label: 'Quantity Ordered',\n            field: 'quantity',\n            sort: 'asc',\n            width: 200\n          },\n          {\n            label: 'Total Price',\n            field: 'total',\n            sort: 'asc',\n            width: 150\n          },\n        ],\n        rows: [\n\n        ]\n      })\n\n    const [prodTotal, setProdTotal] = useState({});\n\n    useEffect(() => {\n        const updatedRows = report.map((reportItem) => {\n          const matchingProd = prodList.find((prod) => prod.prodID === reportItem.prodID);\n          const categoryName = categList.find((item) => matchingProd?.category === item[0])?.[1] || '';\n    \n          return {\n            name: reportItem.name,\n            item: matchingProd?.prodName || '',\n            quantity: reportItem.stock,\n            total: reportItem.total,\n            category: categoryName,\n          };\n        });\n        \n        setData((prevData) => ({ ...prevData, rows: updatedRows }));\n\n        const totalPriceMap = report.reduce((acc, reportItem) => {\n            const matchingProd = prodList.find((prod) => prod.prodID === reportItem.prodID);\n            if (matchingProd) {\n            const currentTotalPrice = acc[matchingProd.prodName] || 0;\n            acc[matchingProd.prodName] = currentTotalPrice + reportItem.total;\n            }\n            return acc;\n        }, {});\n        \n        setProdTotal(totalPriceMap);\n        \n      }, [report, prodList, categList]);\n\n   return(\n    <>\n    <h1>{JSON.stringify(prodTotal)}</h1>\n    {/* <Table>\n    <thead>\n        <tr>\n            <th>Customer Name</th>\n            <th>Item Name</th>\n            <th>Stock</th>\n            <th>Category</th>\n        </tr>\n    </thead>\n    <tbody>\n        {report.map(report=>(\n          \n          <tr>\n\n            <td>{report.name}</td>\n            {\n                prodList.map(prod=>{\n                    if(report.prodID === prod.prodID){\n                        return(\n                            <>\n                                <td>{prod.prodName}</td>\n                                <td>{report.stock}</td>\n\n                               {\n                                categList.map((item, index)=>{\n                                    if(prod.category === item[0]){\n                                        return (<td>{item[1]}</td>)\n                                    }\n                                    return null;\n                                })\n                                }\n                            </>\n                        )\n                    }\n                    return null;\n                })\n                }\n          </tr>  \n          \n        ))}\n    </tbody>\n</Table> */}\n<MDBDataTable\n      data={data}\n      sorting={false}\n    />\n    {/* <h1>{JSON.stringify(report)}</h1> */}\n</>\n   )\n}\n","C:\\Users\\denso\\Desktop\\react\\event-finals-main\\event-finals-main\\src\\addCateg.js",[],[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":13},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["62"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","no-object-constructor"]